{"id":3360,"fid":"3085","name":"成为 K 特殊字符串需要删除的最少字符数","slug":"minimum-deletions-to-make-string-k-special","link":"https://leetcode.cn/problems/minimum-deletions-to-make-string-k-special/description/","percent":42.842357202923864,"level":"Medium","category":"algorithms","en_name":"Minimum Deletions to Make String K-Special","cn_name":"成为 K 特殊字符串需要删除的最少字符数","totalAC":"15.8K","totalSubmit":"27.8K","likes":37,"dislikes":0,"desc":"<p>给你一个字符串 <code>word</code> 和一个整数 <code>k</code>。</p>\n\n<p>如果&nbsp;<code>|freq(word[i]) - freq(word[j])| &lt;= k</code> 对于字符串中所有下标 <code>i</code> 和 <code>j</code>&nbsp; 都成立，则认为 <code>word</code> 是 <strong>k 特殊字符串</strong>。</p>\n\n<p>此处，<code>freq(x)</code> 表示字符 <code>x</code> 在 <code>word</code> 中的<span data-keyword=\"frequency-letter\">出现频率</span>，而 <code>|y|</code> 表示 <code>y</code> 的绝对值。</p>\n\n<p>返回使 <code>word</code> 成为 <strong>k 特殊字符串</strong> 需要删除的字符的最小数量。</p>\n\n<p>&nbsp;</p>\n\n<p><strong class=\"example\">示例 1：</strong></p>\n\n<div class=\"example-block\" style=\"border-color: var(--border-tertiary); border-left-width: 2px; color: var(--text-secondary); font-size: .875rem; margin-bottom: 1rem; margin-top: 1rem; overflow: visible; padding-left: 1rem;\">\n<p><strong>输入：</strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">word = \"aabcaba\", k = 0</span></p>\n\n<p><strong>输出：</strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">3</span></p>\n\n<p><strong>解释：</strong>可以删除 <code>2</code> 个 <code>\"a\"</code> 和 <code>1</code> 个 <code>\"c\"</code> 使 <code>word</code> 成为 <code>0</code> 特殊字符串。<code>word</code> 变为 <code>\"baba\"</code>，此时 <code>freq('a') == freq('b') == 2</code>。</p>\n</div>\n\n<p><strong class=\"example\">示例 2：</strong></p>\n\n<div class=\"example-block\" style=\"border-color: var(--border-tertiary); border-left-width: 2px; color: var(--text-secondary); font-size: .875rem; margin-bottom: 1rem; margin-top: 1rem; overflow: visible; padding-left: 1rem;\">\n<p><strong>输入：</strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">word = \"dabdcbdcdcd\", k = 2</span></p>\n\n<p><strong>输出：</strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">2</span></p>\n\n<p><strong>解释：</strong>可以删除 <code>1</code> 个 <code>\"a\"</code> 和 <code>1</code> 个 <code>\"d\"</code> 使 <code>word</code> 成为 <code>2</code> 特殊字符串。<code>word</code> 变为 <code>\"bdcbdcdcd\"</code>，此时 <code>freq('b') == 2</code>，<code>freq('c') == 3</code>，<code>freq('d') == 4</code>。</p>\n</div>\n\n<p><strong class=\"example\">示例 3：</strong></p>\n\n<div class=\"example-block\" style=\"border-color: var(--border-tertiary); border-left-width: 2px; color: var(--text-secondary); font-size: .875rem; margin-bottom: 1rem; margin-top: 1rem; overflow: visible; padding-left: 1rem;\">\n<p><strong>输入：</strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">word = \"aaabaaa\", k = 2</span></p>\n\n<p><strong>输出：</strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">1</span></p>\n\n<p><strong>解释：</strong>可以删除<strong> </strong>1 个 <code>\"b\"</code> 使 <code>word</code> 成为 <code>2</code>特殊字符串。因此，<code>word</code> 变为 <code>\"aaaaaa\"</code>，此时每个字母的频率都是 <code>6</code>。</p>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li>\n\t<li><code>word</code> 仅由小写英文字母组成。</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int minimumDeletions(string word, int k) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int minimumDeletions(String word, int k) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def minimumDeletions(self, word, k):\n        \"\"\"\n        :type word: str\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def minimumDeletions(self, word: str, k: int) -> int:\n        "},{"value":"c","text":"C","defaultCode":"int minimumDeletions(char* word, int k) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int MinimumDeletions(string word, int k) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} word\n * @param {number} k\n * @return {number}\n */\nvar minimumDeletions = function(word, k) {\n    \n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function minimumDeletions(word: string, k: number): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param String $word\n     * @param Integer $k\n     * @return Integer\n     */\n    function minimumDeletions($word, $k) {\n        \n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func minimumDeletions(_ word: String, _ k: Int) -> Int {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun minimumDeletions(word: String, k: Int): Int {\n        \n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int minimumDeletions(String word, int k) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func minimumDeletions(word string, k int) int {\n    \n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} word\n# @param {Integer} k\n# @return {Integer}\ndef minimum_deletions(word, k)\n    \nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def minimumDeletions(word: String, k: Int): Int = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn minimum_deletions(word: String, k: i32) -> i32 {\n        \n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (minimum-deletions word k)\n  (-> string? exact-integer? exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec minimum_deletions(Word :: unicode:unicode_binary(), K :: integer()) -> integer().\nminimum_deletions(Word, K) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec minimum_deletions(word :: String.t, k :: integer) :: integer\n  def minimum_deletions(word, k) do\n    \n  end\nend"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func minimumDeletions(word: String, k: Int64): Int64 {\n\n    }\n}"}],"testcase":"\"aabcaba\"\n0","testable":true,"templateMeta":{"name":"minimumDeletions","params":[{"name":"word","type":"string"},{"type":"integer","name":"k"}],"return":{"type":"integer"}}}